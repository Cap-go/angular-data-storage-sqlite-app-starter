{"ast":null,"code":"/**\n * IsJsonSQLite\n * @param obj\n */\nexport const isJsonStore = obj => {\n  const keyFirstLevel = ['database', 'encrypted', 'tables'];\n  if (obj == null || Object.keys(obj).length === 0 && obj.constructor === Object) return false;\n\n  for (const key of Object.keys(obj)) {\n    if (keyFirstLevel.indexOf(key) === -1) return false;\n    if (key === 'database' && typeof obj[key] != 'string') return false;\n    if (key === 'encrypted' && typeof obj[key] != 'boolean') return false;\n    if (key === 'tables' && typeof obj[key] != 'object') return false;\n\n    if (key === 'tables') {\n      for (const oKey of obj[key]) {\n        const retTable = isTable(oKey);\n        console.log(`$$$ retTable ${retTable} `);\n        if (!retTable) return false;\n      }\n    }\n  }\n\n  return true;\n};\n/**\n * IsTable\n * @param obj\n */\n\nexport const isTable = obj => {\n  const keyTableLevel = ['name', 'values'];\n\n  if (obj == null || Object.keys(obj).length === 0 && obj.constructor === Object) {\n    return false;\n  }\n\n  for (const key of Object.keys(obj)) {\n    if (keyTableLevel.indexOf(key) === -1) return false;\n    if (key === 'name' && typeof obj[key] != 'string') return false;\n    if (key === 'values' && typeof obj[key] != 'object') return false;\n\n    if (key === 'values') {\n      for (const oKey of obj[key]) {\n        const retValue = isValue(oKey);\n        console.log(`$$$ retValue ${retValue} `);\n        if (!retValue) return false;\n      }\n    }\n  }\n\n  return true;\n};\n/**\n * IsValue\n * @param obj\n */\n\nexport const isValue = obj => {\n  const keyTableLevel = ['key', 'value'];\n\n  if (obj == null || Object.keys(obj).length === 0 && obj.constructor === Object) {\n    return false;\n  }\n\n  for (const key of Object.keys(obj)) {\n    if (keyTableLevel.indexOf(key) === -1) return false;\n    if (key === 'key' && typeof obj[key] != 'string') return false;\n    if (key === 'value' && typeof obj[key] != 'string') return false;\n  }\n\n  return true;\n}; //# sourceMappingURL=json-utils.js.map","map":null,"metadata":{},"sourceType":"module"}